
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Cultivars Collection (Main Data)
    match /cultivars/{cultivarId} {
      // Anyone can read cultivars that are 'Live' or 'featured'
      allow read: if resource.data.status == 'Live' || resource.data.status == 'featured';
      // Authenticated users (intended as admins) can read any cultivar
      allow read: if request.auth != null;


      // Only authenticated users (intended as admins) can create new cultivars directly
      allow create: if request.auth != null &&
                       request.resource.data.name is string &&
                       request.resource.data.name.size() > 0 &&
                       request.resource.data.status is string &&
                       request.resource.data.createdAt == request.time &&
                       request.resource.data.updatedAt == request.time &&
                       request.resource.data.history is list &&
                       request.resource.data.history.size() > 0 &&
                       request.resource.data.history[0].event == "Cultivar Created by Admin" &&
                       request.resource.data.reviews is list &&
                       request.resource.data.reviews.size() == 0;

      // Only authenticated users (intended as admins) can update cultivars
      allow update: if request.auth != null &&
                       request.resource.data.updatedAt == request.time &&
                       request.resource.data.createdAt == resource.data.createdAt; // createdAt should not change

      // Only authenticated users (intended as admins) can delete cultivars
      allow delete: if request.auth != null;
    }

    // Submitted Cultivars Collection (For Review)
    match /submitted_cultivars/{submissionId} {
      // Admins can read, update, delete submissions
      allow read, update, delete: if request.auth != null; // TODO: Restrict to admin role

      // Allow anyone to submit a new cultivar for review
      allow create: if request.resource.data.name is string && request.resource.data.name.size() > 0 &&
                       request.resource.data.sourceEmail is string && request.resource.data.sourceEmail.matches("^[^@]+@[^@]+\\.[^@]+$") &&
                       request.resource.data.status == 'User Submitted' &&
                       request.resource.data.submittedAt == request.time &&
                       // Optional fields: check for null or correct type using get()
                       (request.resource.data.get('genetics', null) == null || request.resource.data.genetics is string) &&
                       (request.resource.data.get('description', null) == null || request.resource.data.description is string) &&
                       (request.resource.data.get('effects', null) == null || request.resource.data.effects is list) &&
                       (request.resource.data.get('flavors', null) == null || request.resource.data.flavors is list) &&
                       (request.resource.data.get('terpeneProfile', null) == null || request.resource.data.terpeneProfile is list) &&
                       (request.resource.data.get('thc', null) == null || request.resource.data.thc is map) &&
                       (request.resource.data.get('cbd', null) == null || request.resource.data.cbd is map) &&
                       // Image validation with hardcoded project ID
                       (request.resource.data.get('images', null) == null || (
                           request.resource.data.images is list &&
                           (request.resource.data.images.size() == 0 ||
                            (request.resource.data.images.size() == 1 &&
                             request.resource.data.images[0].url is string &&
                             // Replace 'grenecultivar' with your actual Firebase Project ID if different.
                             request.resource.data.images[0].url.matches('^https://firebasestorage.googleapis.com/v0/b/grenecultivar/o/cultivar-images%2Fuser-submitted%2F.+') &&
                             request.resource.data.images[0].alt is string
                            )
                           )
                         )
                       ) &&
                       // Ensure no unexpected top-level fields are present
                       request.resource.data.keys().hasOnly(['name', 'sourceEmail', 'source', 'genetics', 'description', 'effects', 'flavors', 'terpeneProfile', 'images', 'thc', 'cbd', 'status', 'submittedAt']);
    }

    // TODO: Add rules for user profiles if you have them
    // match /users/{userId} {
    //   allow read: if true;
    //   allow write: if request.auth.uid == userId;
    // }
  }
}

    