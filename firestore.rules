
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isAuthAdmin() {
      // For development, allow any authenticated user.
      // TODO: Implement proper admin role check for production (e.g., custom claims or users collection)
      return request.auth != null;
    }

    function isISOTimestampString(value) {
      return value is string && value.matches("^([0-9]{4})-?(1[0-2]|0[1-9])-?(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):?([0-5][0-9]):?([0-5][0-9])\\.?([0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9])(?::?(?:[0-5][0-9]))?)?$");
    }

    function isValidAdminImageUrl(url) {
      // For images uploaded by admin (not user-submitted)
      // Allows URLs from any subfolder under cultivar-images, EXCEPT user-submitted
      let firebaseUrlPrefix = "https://firebasestorage.googleapis.com/v0/b/grenecultivar.appspot.com/o/cultivar-images%2F";
      let userSubmittedPrefix = "https://firebasestorage.googleapis.com/v0/b/grenecultivar.appspot.com/o/cultivar-images%2Fuser-submitted";
      return url is string && url.startsWith(firebaseUrlPrefix) && !url.startsWith(userSubmittedPrefix);
    }

    function isValidUserSubmittedImageUrl(url) {
      // For images uploaded during public submission
      let firebaseUrlPrefix = "https://firebasestorage.googleapis.com/v0/b/grenecultivar.appspot.com/o/cultivar-images%2Fuser-submitted%2F";
      return url is string && url.startsWith(firebaseUrlPrefix);
    }

    // --- Cultivars Collection (/cultivars) ---
    match /cultivars/{cultivarId} {
      // PUBLIC READ: Allow reading if status is 'Live' or 'featured'
      // ADMIN READ: Allow admin to read any
      allow get: if resource.data.status == 'Live' 
                  || resource.data.status == 'featured'
                  || isAuthAdmin();
      
      // PUBLIC LIST: Allow anyone to list cultivars (client filters results)
      allow list: if true;

      // ADMIN CREATE: Only authenticated admins
      allow create: if isAuthAdmin()
        && request.resource.data.name is string && request.resource.data.name.size() >= 3
        && request.resource.data.genetics in ['Sativa', 'Indica', 'Hybrid', 'Ruderalis']
        && request.resource.data.status in ['Live', 'featured', 'recentlyAdded', 'User Submitted', 'Hide', 'archived']
        && request.resource.data.createdAt == request.time
        && request.resource.data.updatedAt == request.time
        && request.resource.data.reviews is list && request.resource.data.reviews.size() == 0
        && request.resource.data.history is list && request.resource.data.history.size() == 1
        && request.resource.data.history[0].event == "Cultivar Created by Admin" // Or "Cultivar Seeded"
        && request.resource.data.history[0].timestamp is string // Client sends ISO string here
        && (request.resource.data.images is list) // Simplified
        && (request.resource.data.thc is map)
        && (request.resource.data.cbd is map)
        && (request.resource.data.get('cbc', null) == null || request.resource.data.cbc is map)
        && (request.resource.data.get('cbg', null) == null || request.resource.data.cbg is map)
        && (request.resource.data.get('cbn', null) == null || request.resource.data.cbn is map)
        && (request.resource.data.get('thcv', null) == null || request.resource.data.thcv is map)
        && (request.resource.data.effects is list)
        && (request.resource.data.get('medicalEffects', null) == null || request.resource.data.medicalEffects is list)
        && (request.resource.data.get('flavors', null) == null || request.resource.data.flavors is list)
        && (request.resource.data.get('terpeneProfile', null) == null || request.resource.data.terpeneProfile is list)
        && (request.resource.data.get('parents', null) == null || request.resource.data.parents is list)
        && (request.resource.data.get('children', null) == null || request.resource.data.children is list)
        && (request.resource.data.get('additionalInfo', null) == null || request.resource.data.additionalInfo is map)
        && (request.resource.data.get('additionalInfo', null) == null || request.resource.data.additionalInfo.get('geneticCertificate', null) == null || request.resource.data.additionalInfo.geneticCertificate is list)
        && (request.resource.data.get('additionalInfo', null) == null || request.resource.data.additionalInfo.get('plantPicture', null) == null || request.resource.data.additionalInfo.plantPicture is list)
        && (request.resource.data.get('additionalInfo', null) == null || request.resource.data.additionalInfo.get('cannabinoidInfo', null) == null || request.resource.data.additionalInfo.cannabinoidInfo is list)
        && (request.resource.data.get('additionalInfo', null) == null || request.resource.data.additionalInfo.get('terpeneInfo', null) == null || request.resource.data.additionalInfo.terpeneInfo is list);

      // ADMIN UPDATE: Only authenticated admins
      allow update: if isAuthAdmin()
        && request.resource.data.updatedAt == request.time
        && request.resource.data.createdAt == resource.data.createdAt // createdAt cannot be changed
        // Allow history and reviews to be appended (client handles with arrayUnion)
        && (request.resource.data.history.size() >= resource.data.history.size() || request.resource.data.history == resource.data.history)
        && (request.resource.data.reviews.size() >= resource.data.reviews.size() || request.resource.data.reviews == resource.data.reviews)
        // Validate other fields if they are present in the request
        && (request.resource.data.name == resource.data.name || (request.resource.data.name is string && request.resource.data.name.size() >= 3))
        && (request.resource.data.genetics == resource.data.genetics || request.resource.data.genetics in ['Sativa', 'Indica', 'Hybrid', 'Ruderalis'])
        && (request.resource.data.status == resource.data.status || request.resource.data.status in ['Live', 'featured', 'recentlyAdded', 'User Submitted', 'Hide', 'archived'])
        // Simplified array/map checks for update
        && (!('images' in request.resource.data) || request.resource.data.images is list)
        && (!('thc' in request.resource.data) || request.resource.data.thc is map)
        && (!('cbd' in request.resource.data) || request.resource.data.cbd is map)
        && (!('cbc' in request.resource.data) || request.resource.data.cbc is map || request.resource.data.cbc == null)
        && (!('cbg' in request.resource.data) || request.resource.data.cbg is map || request.resource.data.cbg == null)
        && (!('cbn' in request.resource.data) || request.resource.data.cbn is map || request.resource.data.cbn == null)
        && (!('thcv' in request.resource.data) || request.resource.data.thcv is map || request.resource.data.thcv == null)
        && (!('effects' in request.resource.data) || request.resource.data.effects is list)
        && (!('medicalEffects' in request.resource.data) || request.resource.data.medicalEffects is list || request.resource.data.medicalEffects == null)
        && (!('flavors' in request.resource.data) || request.resource.data.flavors is list || request.resource.data.flavors == null)
        && (!('terpeneProfile' in request.resource.data) || request.resource.data.terpeneProfile is list || request.resource.data.terpeneProfile == null)
        && (!('parents' in request.resource.data) || request.resource.data.parents is list || request.resource.data.parents == null)
        && (!('children' in request.resource.data) || request.resource.data.children is list || request.resource.data.children == null)
        && (!('additionalInfo' in request.resource.data) || request.resource.data.additionalInfo is map || request.resource.data.additionalInfo == null)
        && (!('additionalInfo'in request.resource.data && 'geneticCertificate' in request.resource.data.additionalInfo) || request.resource.data.additionalInfo.geneticCertificate is list || request.resource.data.additionalInfo.geneticCertificate == null)
        && (!('additionalInfo'in request.resource.data && 'plantPicture' in request.resource.data.additionalInfo) || request.resource.data.additionalInfo.plantPicture is list || request.resource.data.additionalInfo.plantPicture == null)
        && (!('additionalInfo'in request.resource.data && 'cannabinoidInfo' in request.resource.data.additionalInfo) || request.resource.data.additionalInfo.cannabinoidInfo is list || request.resource.data.additionalInfo.cannabinoidInfo == null)
        && (!('additionalInfo'in request.resource.data && 'terpeneInfo' in request.resource.data.additionalInfo) || request.resource.data.additionalInfo.terpeneInfo is list || request.resource.data.additionalInfo.terpeneInfo == null);

      // ADMIN DELETE: Only authenticated admins
      allow delete: if isAuthAdmin();
    }

    // --- Submitted Cultivars Collection (/submitted_cultivars) ---
    match /submitted_cultivars/{submissionId} {
      // ADMIN ONLY: Read, Update, Delete for moderation
      allow get, list, update, delete: if isAuthAdmin();

      // ANYONE CAN CREATE: For public submissions, with validation
      allow create: if request.resource.data.name is string && request.resource.data.name.size() >= 3
        && request.resource.data.sourceEmail is string && request.resource.data.sourceEmail.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")
        && request.resource.data.source == request.resource.data.sourceEmail
        && request.resource.data.status == 'User Submitted'
        && request.resource.data.submittedAt == request.time
        && (request.resource.data.get('genetics', null) == null || request.resource.data.genetics in ['Sativa', 'Indica', 'Hybrid', 'Ruderalis'])
        && (request.resource.data.get('description', null) == null || request.resource.data.description is string)
        && (request.resource.data.get('effects', null) == null || request.resource.data.effects is list)
        && (request.resource.data.get('flavors', null) == null || request.resource.data.flavors is list)
        && (request.resource.data.get('terpeneProfile', null) == null || (
            request.resource.data.terpeneProfile is list &&
            (request.resource.data.terpeneProfile.size() == 0 || (
                request.resource.data.terpeneProfile[0] is map &&
                request.resource.data.terpeneProfile[0].name is string &&
                request.resource.data.terpeneProfile[0].id is string
                // Not checking percentage as it's optional for user submissions
            ))
        ))
        && (request.resource.data.get('images', null) == null || (
            request.resource.data.images is list &&
            (request.resource.data.images.size() == 0 || (
                request.resource.data.images.size() == 1 && // Max 1 image for submission
                request.resource.data.images[0] is map &&
                request.resource.data.images[0].url is string && isValidUserSubmittedImageUrl(request.resource.data.images[0].url) &&
                request.resource.data.images[0].alt is string &&
                request.resource.data.images[0].id is string
            ))
        ))
        && (request.resource.data.get('thc', null) == null || request.resource.data.thc is map)
        && (request.resource.data.get('cbd', null) == null || request.resource.data.cbd is map)
        // Ensure no unexpected fields are submitted
        && request.resource.data.keys().hasOnly([
            'name', 'sourceEmail', 'source', 'genetics', 'description',
            'effects', 'flavors', 'terpeneProfile', 'images',
            'thc', 'cbd', 'status', 'submittedAt', 'primaryImageAlt' // primaryImageAlt might be in top-level, not image obj for submission
        ]);
    }
  }
}

    